{"ast":null,"code":"//get current state  of  products   \n//method accepts current state of products and action item and updates state in immutable manner\nexport const getAllitemsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ITEMS_REQUEST\":\n      return {\n        loading: true,\n        ...state\n      };\n\n    case \"GET_ITEMS_SUCCESS\":\n      return {\n        loading: false,\n        items: action.payload\n      };\n\n    case \"GET_ITEMS_FAILED\":\n      return {\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const addItemReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_ITEM_REQUEST\":\n      return {\n        loading: true,\n        ...state\n      };\n\n    case \"ADD_ITEM_SUCCESS\":\n      return {\n        loading: false,\n        success: true\n      };\n\n    case \"ADD_ITEM_FAILED\":\n      return {\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getItemByIdReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ITEM_BY_ID_REQUEST\":\n      return {\n        loading: true,\n        ...state\n      };\n\n    case \"GET_ITEM_BY_ID_SUCCESS\":\n      return {\n        loading: false,\n        item: action.payload\n      };\n\n    case \"GET_ITEM_BY_ID_FAILED\":\n      return {\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const editItemReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"EDIT_ITEM_REQUEST\":\n      return {\n        editloading: true,\n        ...state\n      };\n\n    case \"EDIT_ITEM_SUCCESS\":\n      return {\n        editloading: false,\n        editsuccess: true\n      };\n\n    case \"EDIT_ITEM_FAILED\":\n      return {\n        editerror: action.payload,\n        editloading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/riteesh/Desktop/GitHub/FrontEnd_WebD_Project/INFO6150_WebDesign_FinalProject_Client-main/web_app/src/reducers/itemReducers.js"],"names":["getAllitemsReducer","state","items","action","type","loading","payload","error","addItemReducer","success","getItemByIdReducer","item","editItemReducer","editloading","editsuccess","editerror"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA0B;AAAA,MAAXC,MAAW;;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAEL,WAAGJ;AAFE,OAAP;;AAKF,SAAK,mBAAL;AACE,aAAO;AACLI,QAAAA,OAAO,EAAE,KADJ;AAELH,QAAAA,KAAK,EAAEC,MAAM,CAACG;AAFT,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OADT;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBM;AAwBP,OAAO,MAAMO,cAAc,GAAG,YAAmC;AAAA,MAAlCP,KAAkC,uEAA1B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA0B;AAAA,MAAXC,MAAW;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAEL,WAAGJ;AAFE,OAAP;;AAKF,SAAK,kBAAL;AACE,aAAO;AACLI,QAAAA,OAAO,EAAE,KADJ;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO;AACLF,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OADT;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBM;AAwBP,OAAO,MAAMS,kBAAkB,GAAG,YAAmC;AAAA,MAAlCT,KAAkC,uEAA1B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA0B;AAAA,MAAXC,MAAW;;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAEL,WAAGJ;AAFE,OAAP;;AAKF,SAAK,wBAAL;AACE,aAAO;AACLI,QAAAA,OAAO,EAAE,KADJ;AAELM,QAAAA,IAAI,EAAER,MAAM,CAACG;AAFR,OAAP;;AAIF,SAAK,uBAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OADT;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAtBM;AAwBP,OAAO,MAAMW,eAAe,GAAG,YAAmC;AAAA,MAAlCX,KAAkC,uEAA1B;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA0B;AAAA,MAAXC,MAAW;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO;AACLS,QAAAA,WAAW,EAAE,IADR;AAEL,WAAGZ;AAFE,OAAP;;AAKF,SAAK,mBAAL;AACE,aAAO;AACLY,QAAAA,WAAW,EAAE,KADR;AAELC,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO;AACLC,QAAAA,SAAS,EAAEZ,MAAM,CAACG,OADb;AAELO,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAKF;AACE,aAAOZ,KAAP;AAnBJ;AAqBD,CAtBM","sourcesContent":["//get current state  of  products   \n//method accepts current state of products and action item and updates state in immutable manner\nexport const getAllitemsReducer = (state = { items: [] }, action) => {   \n  switch (action.type) {\n    case \"GET_ITEMS_REQUEST\":\n      return {\n        loading: true,\n        ...state,\n      };\n\n    case \"GET_ITEMS_SUCCESS\":\n      return {\n        loading: false,\n        items: action.payload,\n      };\n    case \"GET_ITEMS_FAILED\":\n      return {\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addItemReducer = (state = { items: [] }, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM_REQUEST\":\n      return {\n        loading: true,\n        ...state,\n      };\n\n    case \"ADD_ITEM_SUCCESS\":\n      return {\n        loading: false,\n        success: true,\n      };\n    case \"ADD_ITEM_FAILED\":\n      return {\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getItemByIdReducer = (state = { items: [] }, action) => {\n  switch (action.type) {\n    case \"GET_ITEM_BY_ID_REQUEST\":\n      return {\n        loading: true,\n        ...state,\n      };\n\n    case \"GET_ITEM_BY_ID_SUCCESS\":\n      return {\n        loading: false,\n        item: action.payload,\n      };\n    case \"GET_ITEM_BY_ID_FAILED\":\n      return {\n        error: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const editItemReducer = (state = { items: [] }, action) => {\n  switch (action.type) {\n    case \"EDIT_ITEM_REQUEST\":\n      return {\n        editloading: true,\n        ...state,\n      };\n\n    case \"EDIT_ITEM_SUCCESS\":\n      return {\n        editloading: false,\n        editsuccess: true,\n      };\n    case \"EDIT_ITEM_FAILED\":\n      return {\n        editerror: action.payload,\n        editloading: false,\n      };\n\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}