{"ast":null,"code":"var _jsxFileName = \"/Users/riteesh/Desktop/GitHub/FrontEnd_WebD_Project/INFO6150_WebDesign_FinalProject_Client-main/web_app/src/screens/Registerscreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../actions/userAction\";\nimport Loading from \"../components/Loading\";\nimport Success from \"../components/Success\";\nimport Error from \"../components/Error\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registerscreen() {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\n  const registerstate = useSelector(state => state.registerUserReducer);\n  const {\n    error,\n    loading,\n    success\n  } = registerstate;\n  const [passwordError, setPasswordErr] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const dispatch = useDispatch();\n  const [emailError, setEmailError] = useState(\"\");\n\n  const validateEmail = e => {\n    var email = e.target.value;\n\n    if (validator.isEmail(email)) {\n      setEmailError(\"\");\n    } else {\n      setEmailError(\"Enter valid Email\");\n    }\n  };\n\n  const handlePasswordChange = evnt => {\n    setpassword(passwordInput.password);\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n    const NewPasswordInput = { ...passwordInput,\n      [passwordInputFieldName]: passwordInputValue\n    };\n    setPasswordInput(NewPasswordInput);\n  };\n\n  const handleValidation = evnt => {\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name; //for password \n\n    if (passwordInputFieldName === 'password') {\n      const uppercaseRegExp = /(?=.*?[A-Z])/;\n      const lowercaseRegExp = /(?=.*?[a-z])/;\n      const digitsRegExp = /(?=.*?[0-9])/;\n      const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n      const minLengthRegExp = /.{8,}/;\n      const passwordLength = passwordInputValue.length;\n      const uppercasePassword = uppercaseRegExp.test(passwordInputValue);\n      const lowercasePassword = lowercaseRegExp.test(passwordInputValue);\n      const digitsPassword = digitsRegExp.test(passwordInputValue);\n      const specialCharPassword = specialCharRegExp.test(passwordInputValue);\n      const minLengthPassword = minLengthRegExp.test(passwordInputValue);\n      let errMsg = \"\";\n\n      if (passwordLength === 0) {\n        errMsg = \"Password is empty\";\n      } else if (!uppercasePassword) {\n        errMsg = \"At least one Uppercase\";\n      } else if (!lowercasePassword) {\n        errMsg = \"At least one Lowercase\";\n      } else if (!digitsPassword) {\n        errMsg = \"At least one digit\";\n      } else if (!specialCharPassword) {\n        errMsg = \"At least one Special Characters\";\n      } else if (!minLengthPassword) {\n        errMsg = \"At least minumum 8 characters\";\n      } else {\n        errMsg = \"\";\n      }\n\n      setPasswordErr(errMsg);\n    } // for confirm password\n\n\n    if (passwordInputFieldName === \"confirmPassword\" || passwordInputFieldName === \"password\" && passwordInput.confirmPassword.length > 0) {\n      if (passwordInput.confirmPassword !== passwordInput.password) {\n        setConfirmPasswordError(\"Confirm password is not matched\");\n      } else {\n        setConfirmPasswordError(\"\");\n      }\n    }\n  };\n\n  function register() {\n    //if current password and confirm passowrd fields are not matching display error message\n    const user = {\n      name,\n      email,\n      password\n    };\n    dispatch(registerUser(user)); //dispatch register user method to register new user\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5 mt-5\",\n        children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(Success, {\n          success: \"User Registered Succesfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n          error: \"Email already registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center m-3\",\n          style: {\n            fontSize: \"35px\"\n          },\n          children: [\" \", \"Register\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            placeholder: \"Name\",\n            className: \"form-control\",\n            value: name,\n            onChange: e => {\n              setname(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            placeholder: \"Email\",\n            className: \"form-control\",\n            value: email,\n            onChange: e => {\n              validateEmail(e);\n              setemail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group my-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  value: passwordInput.password,\n                  onChange: handlePasswordChange,\n                  onKeyUp: handleValidation,\n                  name: \"password\",\n                  placeholder: \"Password\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: passwordError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group my-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  value: passwordInput.confirmPassword,\n                  onChange: handlePasswordChange,\n                  onKeyUp: handleValidation,\n                  name: \"confirmPassword\",\n                  placeholder: \"Re-enter password\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: confirmPasswordError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: register,\n            className: \"btn mt-3 register-button pl-5 bg-dark\",\n            children: [\" \", \"REGISTER\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn login-button bg-dark\",\n            href: \"/login\",\n            children: [\" \", \"Click Here to Login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registerscreen, \"b/yltY59QvVg1bFzkFjGaiZHEYM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Registerscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerscreen\");","map":{"version":3,"sources":["/Users/riteesh/Desktop/GitHub/FrontEnd_WebD_Project/INFO6150_WebDesign_FinalProject_Client-main/web_app/src/screens/Registerscreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","registerUser","Loading","Success","Error","validator","Registerscreen","name","setname","email","setemail","password","setpassword","confirmpassword","setconfirmpassword","registerstate","state","registerUserReducer","error","loading","success","passwordError","setPasswordErr","confirmPasswordError","setConfirmPasswordError","passwordInput","setPasswordInput","confirmPassword","dispatch","emailError","setEmailError","validateEmail","e","target","value","isEmail","handlePasswordChange","evnt","passwordInputValue","trim","passwordInputFieldName","NewPasswordInput","handleValidation","uppercaseRegExp","lowercaseRegExp","digitsRegExp","specialCharRegExp","minLengthRegExp","passwordLength","length","uppercasePassword","test","lowercasePassword","digitsPassword","specialCharPassword","minLengthPassword","errMsg","register","user","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerUser } from \"../actions/userAction\";\nimport Loading from \"../components/Loading\";\nimport Success from \"../components/Success\";\nimport Error from \"../components/Error\";\nimport validator from \"validator\";\n\nexport default function Registerscreen() {\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\n  const registerstate = useSelector((state) => state.registerUserReducer);\n  const { error, loading, success } = registerstate;\n  const [passwordError, setPasswordErr] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState({\n    password: '',\n    confirmPassword: ''\n  })\n\n  const dispatch = useDispatch();\n\n  const [emailError, setEmailError] = useState(\"\");\n\n  const validateEmail = (e) => {\n    var email = e.target.value;\n\n    if (validator.isEmail(email)) {\n      setEmailError(\"\");\n    } else {\n      setEmailError(\"Enter valid Email\");\n    }\n  };\n\n  const handlePasswordChange = (evnt) => {\n    setpassword(passwordInput.password)\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n    const NewPasswordInput = { ...passwordInput, [passwordInputFieldName]: passwordInputValue }\n    setPasswordInput(NewPasswordInput);\n\n  }\n  const handleValidation = (evnt) => {\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name;\n    //for password \n    if (passwordInputFieldName === 'password') {\n      const uppercaseRegExp = /(?=.*?[A-Z])/;\n      const lowercaseRegExp = /(?=.*?[a-z])/;\n      const digitsRegExp = /(?=.*?[0-9])/;\n      const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n      const minLengthRegExp = /.{8,}/;\n      const passwordLength = passwordInputValue.length;\n      const uppercasePassword = uppercaseRegExp.test(passwordInputValue);\n      const lowercasePassword = lowercaseRegExp.test(passwordInputValue);\n      const digitsPassword = digitsRegExp.test(passwordInputValue);\n      const specialCharPassword = specialCharRegExp.test(passwordInputValue);\n      const minLengthPassword = minLengthRegExp.test(passwordInputValue);\n      let errMsg = \"\";\n      if (passwordLength === 0) {\n        errMsg = \"Password is empty\";\n      } else if (!uppercasePassword) {\n        errMsg = \"At least one Uppercase\";\n      } else if (!lowercasePassword) {\n        errMsg = \"At least one Lowercase\";\n      } else if (!digitsPassword) {\n        errMsg = \"At least one digit\";\n      } else if (!specialCharPassword) {\n        errMsg = \"At least one Special Characters\";\n      } else if (!minLengthPassword) {\n        errMsg = \"At least minumum 8 characters\";\n      } else {\n        errMsg = \"\";\n      }\n      setPasswordErr(errMsg);\n    }\n    // for confirm password\n    if (passwordInputFieldName === \"confirmPassword\" || (passwordInputFieldName === \"password\" && passwordInput.confirmPassword.length > 0)) {\n\n      if (passwordInput.confirmPassword !== passwordInput.password) {\n        setConfirmPasswordError(\"Confirm password is not matched\");\n      } else {\n        setConfirmPasswordError(\"\");\n      }\n\n    }\n  }\n\n  function register() {\n      //if current password and confirm passowrd fields are not matching display error message\n      const user = {\n        name,\n        email,\n        password\n      };\n      dispatch(registerUser(user)); //dispatch register user method to register new user\n    \n  }\n\n  return (\n    <div>\n      <div className=\"row justify-content-center \">\n        <div className=\"col-md-5 mt-5\">\n          {loading && <Loading />}\n          {success && <Success success=\"User Registered Succesfully\" />}\n          {error && <Error error=\"Email already registered\" />}\n          <h2 className=\"text-center m-3\" style={{ fontSize: \"35px\" }}>\n            {\" \"}\n            Register\n          </h2>\n\n          <div>\n            <input\n              required\n              type=\"text\"\n              placeholder=\"Name\"\n              className=\"form-control\"\n              value={name}\n              onChange={(e) => {\n                setname(e.target.value);\n              }}\n            />\n            <input\n              required\n              type=\"text\"\n              placeholder=\"Email\"\n              className=\"form-control\"\n              value={email}\n              onChange={(e) => {\n                validateEmail(e);\n                setemail(e.target.value);\n              }}\n            />\n            <span className=\"text-danger\">{emailError}</span>\n\n            <div className=\"row\">\n              <div>\n                <div className=\"form-group my-3\">\n                  <input type=\"password\" value={passwordInput.password} onChange={handlePasswordChange} onKeyUp={handleValidation} name=\"password\" placeholder=\"Password\" className=\"form-control\" />\n                  <p className=\"text-danger\">{passwordError}</p>\n                </div>\n\n\n                <div className=\"form-group my-3\">\n                  <input type=\"password\" value={passwordInput.confirmPassword} onChange={handlePasswordChange} onKeyUp={handleValidation} name=\"confirmPassword\" placeholder=\"Re-enter password\" className=\"form-control\" />\n                  <p className=\"text-danger\">{confirmPasswordError}</p>\n                </div>\n              </div>\n            </div>\n\n            <button onClick={register} className=\"btn mt-3 register-button pl-5 bg-dark\">\n              {\" \"}\n              REGISTER{\" \"}\n            </button>\n            <a className=\"btn login-button bg-dark\" href=\"/login\">\n              {\" \"}\n              Click Here to Login\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}