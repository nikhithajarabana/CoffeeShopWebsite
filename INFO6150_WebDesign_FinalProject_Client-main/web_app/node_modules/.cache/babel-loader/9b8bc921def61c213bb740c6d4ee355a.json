{"ast":null,"code":"//placing an order \n//method accepts current state of order and action-item and updates state in immutable manner\nexport const placeOrderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PLACE_ORDER_REQUEST':\n      return {\n        loading: true\n      };\n\n    case 'PLACE_ORDER_SUCCESS':\n      return {\n        loading: false,\n        success: true,\n        currentUser: action.payload\n      };\n\n    case 'PLACE_ORDER_FAILED':\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getUserOrdersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    orders: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_USER_ORDERS_REQUEST\":\n      return {\n        loading: true,\n        ...state\n      };\n\n    case \"GET_USER_ORDERS_SUCCESS\":\n      return {\n        loading: false,\n        orders: action.payload\n      };\n\n    case \"GET_USER_ORDERS_FAILED\":\n      return {\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getAllOrdersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    orders: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ALLORDERS_REQUEST\":\n      return {\n        loading: true,\n        ...state\n      };\n\n    case \"GET_ALLORDERS_SUCCESS\":\n      return {\n        loading: false,\n        orders: action.payload\n      };\n\n    case \"GET_ALLORDERS_FAILED\":\n      return {\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getAllDriversReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    orders: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ALLDRIVERS_REQUEST\":\n      return {\n        loading: true,\n        ...state\n      };\n\n    case \"GET_ALLDRIVERS_SUCCESS\":\n      return {\n        loading: false,\n        drivers: action.payload\n      };\n\n    case \"GET_ALLDRIVERS_FAILED\":\n      return {\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/riteesh/Desktop/GitHub/FrontEnd_WebD_Project/INFO6150_WebDesign_FinalProject_Client-main/web_app/src/reducers/orderReducer.js"],"names":["placeOrderReducer","state","action","type","loading","success","currentUser","payload","error","getUserOrdersReducer","orders","getAllOrdersReducer","getAllDriversReducer","drivers"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,iBAAiB,GAAG,YAAsB;AAAA,MAArBC,KAAqB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAGnD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,qBAAL;AAA4B,aAAM;AAC9BC,QAAAA,OAAO,EAAE;AADqB,OAAN;;AAG5B,SAAK,qBAAL;AAA4B,aAAM;AAC9BA,QAAAA,OAAO,EAAE,KADqB;AAE9BC,QAAAA,OAAO,EAAE,IAFqB;AAG9BC,QAAAA,WAAW,EAAGJ,MAAM,CAACK;AAHS,OAAN;;AAK5B,SAAK,oBAAL;AAA2B,aAAM;AAC7BH,QAAAA,OAAO,EAAE,KADoB;AAE7BI,QAAAA,KAAK,EAAEN,MAAM,CAACK;AAFe,OAAN;;AAI3B;AAAU,aAAON,KAAP;AAdd;AAgBH,CAnBM;AAqBP,OAAO,MAAMQ,oBAAoB,GAAG,YAAoC;AAAA,MAAnCR,KAAmC,uEAA3B;AAAES,IAAAA,MAAM,EAAE;AAAV,GAA2B;AAAA,MAAXR,MAAW;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,yBAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAEL,WAAGH;AAFE,OAAP;;AAKF,SAAK,yBAAL;AACE,aAAO;AACLG,QAAAA,OAAO,EAAE,KADJ;AAELM,QAAAA,MAAM,EAAER,MAAM,CAACK;AAFV,OAAP;;AAIF,SAAK,wBAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEN,MAAM,CAACK,OADT;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBI;AAwBL,OAAO,MAAMU,mBAAmB,GAAG,YAAoC;AAAA,MAAnCV,KAAmC,uEAA3B;AAAES,IAAAA,MAAM,EAAE;AAAV,GAA2B;AAAA,MAAXR,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAEL,WAAGH;AAFE,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO;AACLG,QAAAA,OAAO,EAAE,KADJ;AAELM,QAAAA,MAAM,EAAER,MAAM,CAACK;AAFV,OAAP;;AAIF,SAAK,sBAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEN,MAAM,CAACK,OADT;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBM;AAwBP,OAAO,MAAMW,oBAAoB,GAAG,YAAoC;AAAA,MAAnCX,KAAmC,uEAA3B;AAAES,IAAAA,MAAM,EAAE;AAAV,GAA2B;AAAA,MAAXR,MAAW;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAEL,WAAGH;AAFE,OAAP;;AAKF,SAAK,wBAAL;AACE,aAAO;AACLG,QAAAA,OAAO,EAAE,KADJ;AAELS,QAAAA,OAAO,EAAGX,MAAM,CAACK;AAFZ,OAAP;;AAIF,SAAK,uBAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEN,MAAM,CAACK,OADT;AAELH,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBM","sourcesContent":["//placing an order \n//method accepts current state of order and action-item and updates state in immutable manner\n\nexport const placeOrderReducer = (state={}, action) => {\n\n\n    switch(action.type)\n    {\n        case 'PLACE_ORDER_REQUEST': return{\n            loading: true\n        }\n        case 'PLACE_ORDER_SUCCESS': return{\n            loading: false,\n            success: true,\n            currentUser : action.payload\n        }\n        case 'PLACE_ORDER_FAILED': return{\n            loading: false,\n            error: action.payload\n        }\n        default : return state\n    }\n}\n\nexport const getUserOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n      case \"GET_USER_ORDERS_REQUEST\":\n        return {\n          loading: true,\n          ...state,\n        };\n  \n      case \"GET_USER_ORDERS_SUCCESS\":\n        return {\n          loading: false,\n          orders: action.payload,\n        };\n      case \"GET_USER_ORDERS_FAILED\":\n        return {\n          error: action.payload,\n          loading: false,\n        };\n  \n      default:\n        return state;\n    }\n  };\n  \n  export const getAllOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n      case \"GET_ALLORDERS_REQUEST\":\n        return {\n          loading: true,\n          ...state,\n        };\n  \n      case \"GET_ALLORDERS_SUCCESS\":\n        return {\n          loading: false,\n          orders: action.payload,\n        };\n      case \"GET_ALLORDERS_FAILED\":\n        return {\n          error: action.payload,\n          loading: false,\n        };\n  \n      default:\n        return state;\n    }\n  };\n\n  export const getAllDriversReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n      case \"GET_ALLDRIVERS_REQUEST\":\n        return {\n          loading: true,\n          ...state,\n        };\n  \n      case \"GET_ALLDRIVERS_SUCCESS\":\n        return {\n          loading: false,\n          drivers : action.payload,\n        };\n      case \"GET_ALLDRIVERS_FAILED\":\n        return {\n          error: action.payload,\n          loading: false,\n        };\n  \n      default:\n        return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}